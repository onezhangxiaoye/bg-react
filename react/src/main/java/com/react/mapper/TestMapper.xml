<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.react.dao.TestMapper" >
  <resultMap id="BaseResultMap" type="com.react.entity.Test" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="dep" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="birthday" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="pic_name" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, dep, birthday, pic_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from test
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from test
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.react.entity.Test" >
    insert into test (id, name, dep, 
      birthday, pic_name)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{dep,jdbcType=INTEGER}, 
      #{birthday,jdbcType=INTEGER}, #{picName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.react.entity.Test" >
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="dep != null" >
        dep,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="picName != null" >
        pic_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dep != null" >
        #{dep,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=INTEGER},
      </if>
      <if test="picName != null" >
        #{picName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.react.entity.Test" >
    update test
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dep != null" >
        dep = #{dep,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=INTEGER},
      </if>
      <if test="picName != null" >
        pic_name = #{picName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.react.entity.Test" >
    update test
    set name = #{name,jdbcType=VARCHAR},
      dep = #{dep,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=INTEGER},
      pic_name = #{picName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>